{% set marker = [] %}
{% for rock in rocks %}

	{% set rockName = '
		<a href="' ~ path('show_rock', { 'areaSlug': rock.areaSlug, slug: rock.rockSlug }) ~ '">
    		<h6 class="font-semibold mb-2">' ~ rock.rockName ~ '</h6>
			<div style="background-size: cover; background-position: center; width: 150px; height: 150px;">
				<picture>
					<source type="image/webp" srcset="https://www.munichclimbs.de/build/images/rock/' ~ rock.rockSlug ~ 'area-map.webp, https://www.munichclimbs.de/build/images/rock/' ~ rock.rockSlug ~ 'area-map@2x.webp 2x, https://www.munichclimbs.de/build/images/rock/' ~ rock.rockSlug ~ 'area-map@3x.webp 3x" loading="lazy">
					<img src="https://www.munichclimbs.de/build/images/rock/' ~ rock.rockSlug ~ 'area-map.webp" alt="Klettergebiet, ' ~ areaName ~ ', Fels: ' ~ rock.rockName ~ '" title="Klettergebiet, ' ~ areaName ~ ', Fels: ' ~ rock.rockName ~ '">
				</picture>
			</div>
		</a>
	' %}

	{% set rockImage = '' %}
	{% set marker = marker|merge([[ rock.rockLat, rock.rockLng, rockName, rockImage ]]) %}
{% endfor %}

{% set intialZoom = [] %}
{% set intialZoom = intialZoom|merge([areaLat, areaLng, areaZoom]) %}

 <script>

    var markersArea = {{ marker|json_encode|raw }}
    var zoom = {{ intialZoom|json_encode|raw }}

    var areaMap = L.map('areaMap').setView([ zoom[0], zoom[1]], zoom[2]);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
		attribution: '© <a href="https://www.mapbox.com/about/maps/">Mapbox</a> © <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> <strong><a href="https://www.mapbox.com/map-feedback/" target="_blank">Improve this map</a></strong>',
		maxZoom: 18,
		accessToken: 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw'
	}).addTo(areaMap);

        
	for (var i = 0; i < markersArea.length; i++) {
		marker = new L.marker([markersArea[i][0],markersArea[i][1]])
		.bindPopup(markersArea[i][2])
		.addTo(areaMap);
	}

	var collapseAreaMap = document.getElementById('collapseAreaMap');
		collapseAreaMap.addEventListener('shown.bs.collapse', (e) => {
			setTimeout(function(){ 
			areaMap.invalidateSize();
		}, 40);
	});

</script>
